#!/bin/bash

set -o nounset

function print_this_dir() {
  if [ -L "$0" ]; then
    dirname "$(readlink "$0")"
  else
    cd "$(dirname "$0")"; pwd
  fi
}

readonly __DIR__="$(print_this_dir)"
readonly JRUBY_VER=10.0.0.1
readonly JRUBY_DIR="${__DIR__}/jruby-${JRUBY_VER}"

function print_help() {
  cat <<__HELP
USAGE
    ./dxjruby setup
    ./dxjruby run path/to/main.rb

    ./dxjruby doctor
    ./dxjruby info list-fonts
__HELP
}

function cmd_setup() {
  cd $__DIR__

  local url=https://repo1.maven.org/maven2/org/jruby/jruby-dist/${JRUBY_VER}/jruby-dist-${JRUBY_VER}-bin.tar.gz

  if which curl; then
    curl $url -o jruby-dist-${JRUBY_VER}-bin.tar.gz
  elif which wget; then
    wget $url
  else
    echo "please install wget or curl" >&2
    exit 1
  fi

  tar xzf jruby-dist-${JRUBY_VER}-bin.tar.gz
  rm jruby-dist-${JRUBY_VER}-bin.tar.gz
}

function cmd_doctor() {
  set -o xtrace

  : ---- JAVA_HOME
  echo $JAVA_HOME

  : ----
  which java

  : ----
  java -version
}

function cmd_info() {
  ${JRUBY_DIR}/bin/jruby -I "${__DIR__}/lib" \
    -r dxjruby -e "DXJRuby.info" "$@"
}

# --------------------------------

. ${__DIR__}/settings.sh

if [ "$JAVA_HOME" != "" ]; then
  export PATH="${JAVA_HOME}/bin:${PATH}"
fi

cmd=
if [ $# -ge 1 ]; then
  cmd="$1"; shift
fi

case $cmd in
  setup )
    cmd_setup
;; doctor )
     cmd_doctor
;; info )
     cmd_info "$@"
;; run )
     ${JRUBY_DIR}/bin/jruby -I "${__DIR__}/lib" "$@"
;; help | -h | --help )
     print_help >&2
;; * )
     {
       echo "invalid command (${cmd})"
       echo "----"
       print_help
     } >&2
     exit 1
;;
esac
